//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AITLibrary.LanguageWSIntegration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LanguageWSSoap", Namespace="http://tempuri.org/")]
    public partial class LanguageWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCountLanguageByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLanguagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LanguageWS() {
            this.Url = global::AITLibrary.Properties.Settings.Default.AITLibrary_LanguageWS_LanguageWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertLanguageCompletedEventHandler insertLanguageCompleted;
        
        /// <remarks/>
        public event SelectCountLanguageByNameCompletedEventHandler SelectCountLanguageByNameCompleted;
        
        /// <remarks/>
        public event DeleteLanguageCompletedEventHandler DeleteLanguageCompleted;
        
        /// <remarks/>
        public event updateLanguageCompletedEventHandler updateLanguageCompleted;
        
        /// <remarks/>
        public event GetAllLanguagesCompletedEventHandler GetAllLanguagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertLanguage(string languageName) {
            object[] results = this.Invoke("insertLanguage", new object[] {
                        languageName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertLanguageAsync(string languageName) {
            this.insertLanguageAsync(languageName, null);
        }
        
        /// <remarks/>
        public void insertLanguageAsync(string languageName, object userState) {
            if ((this.insertLanguageOperationCompleted == null)) {
                this.insertLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLanguageOperationCompleted);
            }
            this.InvokeAsync("insertLanguage", new object[] {
                        languageName}, this.insertLanguageOperationCompleted, userState);
        }
        
        private void OninsertLanguageOperationCompleted(object arg) {
            if ((this.insertLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLanguageCompleted(this, new insertLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCountLanguageByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectCountLanguageByName(string languageName) {
            object[] results = this.Invoke("SelectCountLanguageByName", new object[] {
                        languageName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCountLanguageByNameAsync(string languageName) {
            this.SelectCountLanguageByNameAsync(languageName, null);
        }
        
        /// <remarks/>
        public void SelectCountLanguageByNameAsync(string languageName, object userState) {
            if ((this.SelectCountLanguageByNameOperationCompleted == null)) {
                this.SelectCountLanguageByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCountLanguageByNameOperationCompleted);
            }
            this.InvokeAsync("SelectCountLanguageByName", new object[] {
                        languageName}, this.SelectCountLanguageByNameOperationCompleted, userState);
        }
        
        private void OnSelectCountLanguageByNameOperationCompleted(object arg) {
            if ((this.SelectCountLanguageByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCountLanguageByNameCompleted(this, new SelectCountLanguageByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteLanguage(int languageId) {
            object[] results = this.Invoke("DeleteLanguage", new object[] {
                        languageId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLanguageAsync(int languageId) {
            this.DeleteLanguageAsync(languageId, null);
        }
        
        /// <remarks/>
        public void DeleteLanguageAsync(int languageId, object userState) {
            if ((this.DeleteLanguageOperationCompleted == null)) {
                this.DeleteLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLanguageOperationCompleted);
            }
            this.InvokeAsync("DeleteLanguage", new object[] {
                        languageId}, this.DeleteLanguageOperationCompleted, userState);
        }
        
        private void OnDeleteLanguageOperationCompleted(object arg) {
            if ((this.DeleteLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLanguageCompleted(this, new DeleteLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateLanguage(string languageName, int languageId) {
            object[] results = this.Invoke("updateLanguage", new object[] {
                        languageName,
                        languageId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateLanguageAsync(string languageName, int languageId) {
            this.updateLanguageAsync(languageName, languageId, null);
        }
        
        /// <remarks/>
        public void updateLanguageAsync(string languageName, int languageId, object userState) {
            if ((this.updateLanguageOperationCompleted == null)) {
                this.updateLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateLanguageOperationCompleted);
            }
            this.InvokeAsync("updateLanguage", new object[] {
                        languageName,
                        languageId}, this.updateLanguageOperationCompleted, userState);
        }
        
        private void OnupdateLanguageOperationCompleted(object arg) {
            if ((this.updateLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateLanguageCompleted(this, new updateLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLanguages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllLanguages() {
            object[] results = this.Invoke("GetAllLanguages", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLanguagesAsync() {
            this.GetAllLanguagesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllLanguagesAsync(object userState) {
            if ((this.GetAllLanguagesOperationCompleted == null)) {
                this.GetAllLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetAllLanguages", new object[0], this.GetAllLanguagesOperationCompleted, userState);
        }
        
        private void OnGetAllLanguagesOperationCompleted(object arg) {
            if ((this.GetAllLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLanguagesCompleted(this, new GetAllLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void insertLanguageCompletedEventHandler(object sender, insertLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectCountLanguageByNameCompletedEventHandler(object sender, SelectCountLanguageByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCountLanguageByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCountLanguageByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteLanguageCompletedEventHandler(object sender, DeleteLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateLanguageCompletedEventHandler(object sender, updateLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllLanguagesCompletedEventHandler(object sender, GetAllLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591