//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AITLibrary.AuthorWSIntegration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthorWSSoap", Namespace="http://tempuri.org/")]
    public partial class AuthorWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertAuthorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCountAuthorByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAuthorOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAuthorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAuthorsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthorWS() {
            this.Url = global::AITLibrary.Properties.Settings.Default.AITLibrary_AuthorWS_AuthorWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertAuthorCompletedEventHandler insertAuthorCompleted;
        
        /// <remarks/>
        public event SelectCountAuthorByNameCompletedEventHandler SelectCountAuthorByNameCompleted;
        
        /// <remarks/>
        public event DeleteAuthorCompletedEventHandler DeleteAuthorCompleted;
        
        /// <remarks/>
        public event updateAuthorCompletedEventHandler updateAuthorCompleted;
        
        /// <remarks/>
        public event GetAllAuthorsCompletedEventHandler GetAllAuthorsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAuthor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int insertAuthor(string authorName) {
            object[] results = this.Invoke("insertAuthor", new object[] {
                        authorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void insertAuthorAsync(string authorName) {
            this.insertAuthorAsync(authorName, null);
        }
        
        /// <remarks/>
        public void insertAuthorAsync(string authorName, object userState) {
            if ((this.insertAuthorOperationCompleted == null)) {
                this.insertAuthorOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAuthorOperationCompleted);
            }
            this.InvokeAsync("insertAuthor", new object[] {
                        authorName}, this.insertAuthorOperationCompleted, userState);
        }
        
        private void OninsertAuthorOperationCompleted(object arg) {
            if ((this.insertAuthorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAuthorCompleted(this, new insertAuthorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCountAuthorByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectCountAuthorByName(string authorName) {
            object[] results = this.Invoke("SelectCountAuthorByName", new object[] {
                        authorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCountAuthorByNameAsync(string authorName) {
            this.SelectCountAuthorByNameAsync(authorName, null);
        }
        
        /// <remarks/>
        public void SelectCountAuthorByNameAsync(string authorName, object userState) {
            if ((this.SelectCountAuthorByNameOperationCompleted == null)) {
                this.SelectCountAuthorByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCountAuthorByNameOperationCompleted);
            }
            this.InvokeAsync("SelectCountAuthorByName", new object[] {
                        authorName}, this.SelectCountAuthorByNameOperationCompleted, userState);
        }
        
        private void OnSelectCountAuthorByNameOperationCompleted(object arg) {
            if ((this.SelectCountAuthorByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCountAuthorByNameCompleted(this, new SelectCountAuthorByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAuthor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAuthor(int authorId) {
            object[] results = this.Invoke("DeleteAuthor", new object[] {
                        authorId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAuthorAsync(int authorId) {
            this.DeleteAuthorAsync(authorId, null);
        }
        
        /// <remarks/>
        public void DeleteAuthorAsync(int authorId, object userState) {
            if ((this.DeleteAuthorOperationCompleted == null)) {
                this.DeleteAuthorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAuthorOperationCompleted);
            }
            this.InvokeAsync("DeleteAuthor", new object[] {
                        authorId}, this.DeleteAuthorOperationCompleted, userState);
        }
        
        private void OnDeleteAuthorOperationCompleted(object arg) {
            if ((this.DeleteAuthorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAuthorCompleted(this, new DeleteAuthorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAuthor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateAuthor(string authorName, int authorId) {
            object[] results = this.Invoke("updateAuthor", new object[] {
                        authorName,
                        authorId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateAuthorAsync(string authorName, int authorId) {
            this.updateAuthorAsync(authorName, authorId, null);
        }
        
        /// <remarks/>
        public void updateAuthorAsync(string authorName, int authorId, object userState) {
            if ((this.updateAuthorOperationCompleted == null)) {
                this.updateAuthorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAuthorOperationCompleted);
            }
            this.InvokeAsync("updateAuthor", new object[] {
                        authorName,
                        authorId}, this.updateAuthorOperationCompleted, userState);
        }
        
        private void OnupdateAuthorOperationCompleted(object arg) {
            if ((this.updateAuthorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAuthorCompleted(this, new updateAuthorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAuthors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllAuthors() {
            object[] results = this.Invoke("GetAllAuthors", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAuthorsAsync() {
            this.GetAllAuthorsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAuthorsAsync(object userState) {
            if ((this.GetAllAuthorsOperationCompleted == null)) {
                this.GetAllAuthorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAuthorsOperationCompleted);
            }
            this.InvokeAsync("GetAllAuthors", new object[0], this.GetAllAuthorsOperationCompleted, userState);
        }
        
        private void OnGetAllAuthorsOperationCompleted(object arg) {
            if ((this.GetAllAuthorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAuthorsCompleted(this, new GetAllAuthorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void insertAuthorCompletedEventHandler(object sender, insertAuthorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SelectCountAuthorByNameCompletedEventHandler(object sender, SelectCountAuthorByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCountAuthorByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCountAuthorByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteAuthorCompletedEventHandler(object sender, DeleteAuthorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateAuthorCompletedEventHandler(object sender, updateAuthorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllAuthorsCompletedEventHandler(object sender, GetAllAuthorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAuthorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAuthorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591